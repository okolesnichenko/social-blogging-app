from flask import Blueprint
from ..models import Permission
'''
Так как использвуется фабричная функция приложения, пути и
ошибки не инциализируются, при инициализации app. Декоратор
app.route начинает существовать только после create_app() (в 
app->__init__.py). Поэтому вводится понятие макета, который позволяет
так же как и приложение определить маршруты. Разница лишь в том,
что маршруты, ассоциированные с макетом, находятся в пассивном
состоянии до момента регистрации в приложении, когда они станут
его частью. Используя макет, объявленный в глобальной области ви-
димости, вы можете определять маршруты практически так же, как в
приложении, состоящем из единственного сценария.

from . import views, errors
Импортирование этих модулей(views, errors)связывает маршруты и обработчики
с макетом.

'''

main = Blueprint('main', __name__)


from . import views, errors


@main.app_context_processor
def inject_permissions():
    return dict(Permission=Permission)